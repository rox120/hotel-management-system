/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package deu.hms.manageinfo.hotelrestaurant;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author bennyjung
 */
public class ModifyRestFrame extends javax.swing.JFrame {
    private DefaultTableModel restTableModel;
    private final String path = System.getProperty("user.dir");
    private final String fileName = "/menu_list.txt";
    private final String filePath = path + fileName; 

    /**
     * Creates new form ModifyRest
     */
    public ModifyRestFrame() {
        initComponents();
        showRestData();
    }
    
    public void showRestData() {
        ArrayList<ModifyRest> restData = new ArrayList<>();
        
        restTableModel = (DefaultTableModel) restTable.getModel();
        RestInfoList restil = new RestInfoList();
        restData = restil.getRestInfo();
        

        Object[][] data = new Object[restData.size()][3];
        for (int i = 0; i < restData.size(); ++i) {
            data[i][0] = restData.get(i).getServiceName();
            data[i][1] = restData.get(i).getDishName();
            data[i][2] = restData.get(i).getDishPrice();
            
        }
        restTableModel.setDataVector(data, new Object[] {
             "서비스 종류", "음식 이름", "음식 가격"
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        restTable = new javax.swing.JTable();
        saveButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        addButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        jLabel1.setText("식당 관리");

        restTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "서비스 종류", "음식 이름", "음식 가격"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        restTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                restTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(restTable);

        saveButton.setText("저장");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("삭제");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        addButton.setText("등록");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(addButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(deleteButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(saveButton))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(59, 59, 59)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 431, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(224, 224, 224)
                            .addComponent(jLabel1))))
                .addContainerGap(60, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1)
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveButton)
                    .addComponent(deleteButton)
                    .addComponent(addButton))
                .addContainerGap(60, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void restTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_restTableMouseClicked
        // TODO add your handling code here:
        if(evt.getClickCount() == 2) {
            int selRow = restTable.getSelectedRow();
            if(selRow != -1) {
                showEditDialog(selRow);
            }
        }
    }//GEN-LAST:event_restTableMouseClicked

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        // TODO add your handling code here:
        updateFile();
    }//GEN-LAST:event_saveButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = restTable.getSelectedRow();
        if (selectedRow != -1) {
        // Delete the row from the JTable
        restTableModel.removeRow(selectedRow);
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:
        ModifyRestDialog addDialog = new ModifyRestDialog(this,"add menu",true,null);
        addDialog.setVisible(true);
        
        Object[] newData = addDialog.getEditedData();
        
        restTableModel.addRow(newData);
    }//GEN-LAST:event_addButtonActionPerformed
    private void showEditDialog(int rowIndex) {
        ModifyRestDialog editDialog = new ModifyRestDialog(this,"edit menu",true,
                new Object[]{restTableModel.getValueAt(rowIndex, 0),
                        restTableModel.getValueAt(rowIndex, 1),
                        restTableModel.getValueAt(rowIndex, 2)}
        
        );
        editDialog.setVisible(true);
        
        if(editDialog.getEditedData() != null) {
            Object[] editedData = editDialog.getEditedData();
            restTableModel.setValueAt(editedData[0], rowIndex, 0);
            restTableModel.setValueAt(editedData[1], rowIndex, 1);
            restTableModel.setValueAt(editedData[2], rowIndex, 2);
        
        }
                
    }
     private void updateFile() {
       try{
            
            int rowCount = restTableModel.getRowCount();
            int colCount = restTableModel.getColumnCount();
            File file = new File(filePath);
            BufferedWriter wr = new BufferedWriter(new FileWriter(file));
            
            for(int row =0; row< rowCount; row++){
                for(int col =0; col< colCount; col++){
                    Object roomDatas = restTableModel.getValueAt(row, col);
                    
                    wr.write(roomDatas.toString());
                    
                    // 열이 이동할때마다 탭 문자 추가 
                    if(col < colCount -1) {
                        wr.write("\t");
                    }
                }
                // 한 행이 끝날때마다 개행문자(%n) 추가 
                wr.write(System.lineSeparator());
            }
            
            wr.close();
        
        } catch(IOException e) {
        
        }
   
   }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ModifyRestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ModifyRestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ModifyRestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ModifyRestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ModifyRestFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable restTable;
    private javax.swing.JButton saveButton;
    // End of variables declaration//GEN-END:variables
}
