/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package deu.hms.manageinfo.hotelroom;

import deu.hms.manageinfo.hotelroom.ModifyRoomDialog;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author bennyjung
 */
public class ModifyRoomFrame extends javax.swing.JFrame {
    private DefaultTableModel roomTableModel;
    private final String path = System.getProperty("user.dir");
    private final String fileName = "/room_lists.txt";
    private final String filePath = path + fileName; 
    /**
     * Creates new form ModifyFrame
     */
    public ModifyRoomFrame() {
        initComponents();
        showRoomData();
        
        
    }
    
    public void showRoomData() {
        ArrayList<ModifyRoom> roomData = new ArrayList<>();
        roomTableModel = (DefaultTableModel) roomTable.getModel();
        RoomInfoList ril = new RoomInfoList();
        roomData = ril.getRoomInfo();

        Object[][] data = new Object[roomData.size()][4];
        for (int i = 0; i < roomData.size(); ++i) {
            data[i][0] = roomData.get(i).getRoomFloor();
            data[i][1] = roomData.get(i).getRoomAmount();
            data[i][2] = roomData.get(i).getRoomClass();
            data[i][3] = roomData.get(i).getRoomPrice();
            
        }
        roomTableModel.setDataVector(data, new Object[] {
             "층수", "사용 객실수", "객실 클래스", "객실 가격"
        });
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        roomTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        saveButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        addButton = new javax.swing.JButton();
        Cancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        roomTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "층수", "사용 객실수", "객실 클래스", "객실 가격"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        roomTable.setColumnSelectionAllowed(true);
        roomTable.getTableHeader().setReorderingAllowed(false);
        roomTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                roomTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(roomTable);
        roomTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        jLabel1.setFont(new java.awt.Font("맑은 고딕", 1, 24)); // NOI18N
        jLabel1.setText("객실 관리");
        jLabel1.setName(""); // NOI18N

        saveButton.setText("저장");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("삭제");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        addButton.setText("등록");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        Cancel.setText("닫기");
        Cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(55, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(216, 216, 216))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Cancel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(addButton)
                                .addGap(18, 18, 18)
                                .addComponent(deleteButton)
                                .addGap(18, 18, 18)
                                .addComponent(saveButton))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(48, 48, 48))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addGap(32, 32, 32)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveButton)
                    .addComponent(deleteButton)
                    .addComponent(addButton)
                    .addComponent(Cancel))
                .addContainerGap(44, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        // TODO add your handling code here:
        updateFile();
    }//GEN-LAST:event_saveButtonActionPerformed

    private void roomTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_roomTableMouseClicked
        // TODO add your handling code here:
        if(evt.getClickCount() == 2) {
            int selRow = roomTable.getSelectedRow();
            if(selRow != -1) {
                showEditDialog(selRow);
            }
        }
    }//GEN-LAST:event_roomTableMouseClicked

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = roomTable.getSelectedRow();
        if (selectedRow != -1) {
        // Delete the row from the JTable
        roomTableModel.removeRow(selectedRow);
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:
        ModifyRoomDialog addDialog = new ModifyRoomDialog(this,"Add room",true,null);
        addDialog.setVisible(true);
        // Retrieve data from the dialog
        Object[] newData = addDialog.getEditedData();
        // Add the new row to the table model
        roomTableModel.addRow(newData);
        
        
    }//GEN-LAST:event_addButtonActionPerformed

    private void CancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelActionPerformed
        dispose();
    }//GEN-LAST:event_CancelActionPerformed
   private void showEditDialog(int rowIndex) {
        ModifyRoomDialog editDialog = new ModifyRoomDialog(this, "Edit Room", true,
                new Object[]{roomTableModel.getValueAt(rowIndex, 0),
                        roomTableModel.getValueAt(rowIndex, 1),
                        roomTableModel.getValueAt(rowIndex, 2),
                        roomTableModel.getValueAt(rowIndex, 3)});

        editDialog.setVisible(true);

        if (editDialog.getEditedData() != null) {
            Object[] editedData = editDialog.getEditedData();
            roomTableModel.setValueAt(editedData[0], rowIndex, 0);
            roomTableModel.setValueAt(editedData[1], rowIndex, 1);
            roomTableModel.setValueAt(editedData[2], rowIndex, 2);
            roomTableModel.setValueAt(editedData[3], rowIndex, 3);
        }
    }
   private void updateFile() {
       try{
            
            int rowCount = roomTableModel.getRowCount();
            int colCount = roomTableModel.getColumnCount();
            File file = new File(filePath);
            BufferedWriter wr = new BufferedWriter(new FileWriter(file));
            
            for(int row =0; row< rowCount; row++){
                for(int col =0; col< colCount; col++){
                    Object roomDatas = roomTableModel.getValueAt(row, col);
                    
                    wr.write(roomDatas.toString());
                    
                    // 열이 이동할때마다 탭 문자 추가 
                    if(col < colCount -1) {
                        wr.write("\t");
                    }
                }
                // 한 행이 끝날때마다 개행문자(%n) 추가 
                wr.write(System.lineSeparator());
            }
            
            wr.close();
        
        } catch(IOException e) {
        
        }
   
   }
   

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ModifyRoomFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ModifyRoomFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ModifyRoomFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ModifyRoomFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                new ModifyRoomFrame().setVisible(true);
//          
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Cancel;
    private javax.swing.JButton addButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable roomTable;
    private javax.swing.JButton saveButton;
    // End of variables declaration//GEN-END:variables
}
