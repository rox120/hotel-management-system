/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package deu.hms.restaurant;

import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.JTable;

/**
 *
 * @author Lenovo
 */
public class RoomServiceFrame extends javax.swing.JFrame {

    private WriteServiceList ws = new WriteServiceList();
    
    private int Total = 0;
    private String service = "룸서비스";
    private String pay = null;
    private String roomNum = null;
    private JTable orderTable;

    /**
     * Creates new form NewJFrame
     */
    public RoomServiceFrame() {
        initComponents();
        initServiceList();
        setLocationRelativeTo(null);
    }

    public JTable getOrderTable() {
        return OrderTable;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        Order = new javax.swing.JButton();
        NoOrder = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList3 = new javax.swing.JList<>();
        jScrollPane5 = new javax.swing.JScrollPane();
        OrderTable = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        MenuTable = new javax.swing.JTable();
        Back = new javax.swing.JButton();
        ResetButt = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        SelectPay = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        ViewTotal = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        Payment = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        Reservation = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        SelectRoom = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 102, 0));
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("맑은 고딕", 1, 24)); // NOI18N
        jLabel1.setText("룸서비스");

        jLabel5.setFont(new java.awt.Font("맑은 고딕", 0, 18)); // NOI18N
        jLabel5.setText("메뉴판");

        Order.setText("담기");
        Order.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OrderActionPerformed(evt);
            }
        });

        NoOrder.setText("빼기");
        NoOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NoOrderActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("맑은 고딕", 0, 18)); // NOI18N
        jLabel6.setText("주문");

        jList3.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList3);

        OrderTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "메뉴", "가격", "수량"
            }
        ));
        OrderTable.getTableHeader().setReorderingAllowed(false);
        OrderTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                OrderTableMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(OrderTable);
        if (OrderTable.getColumnModel().getColumnCount() > 0) {
            OrderTable.getColumnModel().getColumn(2).setPreferredWidth(30);
        }

        MenuTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "메뉴", "가격"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        MenuTable.setShowVerticalLines(true);
        MenuTable.getTableHeader().setReorderingAllowed(false);
        MenuTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MenuTableMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(MenuTable);
        if (MenuTable.getColumnModel().getColumnCount() > 0) {
            MenuTable.getColumnModel().getColumn(0).setResizable(false);
            MenuTable.getColumnModel().getColumn(1).setResizable(false);
        }

        Back.setText("이전");
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });

        ResetButt.setText("초기화");
        ResetButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetButtActionPerformed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(244, 244, 244));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        SelectPay.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "객실 청구", "카드", "현금", "수표" }));
        SelectPay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectPayActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("맑은 고딕", 0, 14)); // NOI18N
        jLabel8.setText("Total");

        ViewTotal.setEditable(false);
        ViewTotal.setBackground(new java.awt.Color(255, 255, 255));
        ViewTotal.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ViewTotal.setActionCommand("<Not Set>");
        ViewTotal.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel4.setFont(new java.awt.Font("맑은 고딕", 0, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("결제");

        Payment.setBackground(new java.awt.Color(233, 233, 233));
        Payment.setFont(new java.awt.Font("맑은 고딕", 1, 12)); // NOI18N
        Payment.setText("결제하기");
        Payment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PaymentActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("맑은 고딕", 0, 14)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("에약");

        Reservation.setBackground(new java.awt.Color(233, 233, 233));
        Reservation.setFont(new java.awt.Font("맑은 고딕", 1, 12)); // NOI18N
        Reservation.setText("예약하기");
        Reservation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReservationActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jLabel8))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(ViewTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(SelectPay, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Payment, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Reservation, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Reservation)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel7))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(SelectPay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Payment)
                        .addContainerGap())
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(ViewTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        jLabel2.setText("호실 : ");

        SelectRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectRoomActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(247, 247, 247))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(70, 70, 70)
                                .addComponent(jLabel5))
                            .addComponent(Back, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(SelectRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6)
                                .addGap(117, 117, 117))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(ResetButt, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(NoOrder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(Order, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE))
                                        .addGap(18, 18, 18)
                                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(25, 25, 25))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(Order)
                                    .addGap(39, 39, 39)
                                    .addComponent(NoOrder)
                                    .addGap(109, 109, 109))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(ResetButt)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(Back))))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(SelectRoom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void initServiceList() {
        DefaultTableModel modelA = (DefaultTableModel) MenuTable.getModel(); // jTable 초기화
        DefaultTableModel modelB = (DefaultTableModel) OrderTable.getModel();
        DefaultComboBoxModel modleC = (DefaultComboBoxModel) SelectRoom.getModel();
        modelA.setNumRows(0);
        modelB.setNumRows(0);
        new LoadMenuList(modelA, service, MenuTable.getColumnCount());
        new LoadRoomNum(modleC);
        pay = null;
        roomNum = null;
        Total = 0;
        ViewTotal.setText(String.valueOf(Total));
    }

    private void NoOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NoOrderActionPerformed

        if (roomNum != null) {
            int row = OrderTable.getSelectedRow();

            int a = Integer.parseInt(String.valueOf(OrderTable.getValueAt(row, 1)));
            int b = Integer.parseInt(String.valueOf(OrderTable.getValueAt(row, 2)));
            Total -= a; //총 금액 빼기
            
            if (b > 1) {
                OrderTable.setValueAt(b - 1, row, 2);
            } else {
                DefaultTableModel model = (DefaultTableModel) OrderTable.getModel();
                model.removeRow(row); //행 삭제
            }

            ViewTotal.setText(String.valueOf(Total)); //총 금액 보여주기
        } else {
            JOptionPane.showMessageDialog(null, "호실을 선택해주세요", "오류", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_NoOrderActionPerformed

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        dispose();
    }//GEN-LAST:event_BackActionPerformed

    private void OrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OrderActionPerformed

        if (roomNum != null) {
            int row = MenuTable.getSelectedRow();
            int a = Integer.parseInt(String.valueOf(MenuTable.getValueAt(row, 1)));
            Total += a; // 총 금액 더하기

            DefaultTableModel model = (DefaultTableModel) OrderTable.getModel();

            // 행이 이미 있는지 확인
            boolean found = false;
            int rowCount = model.getRowCount();
            for (int i = 0; i < rowCount; i++) {
                if (String.valueOf(MenuTable.getValueAt(row, 0)).equals(String.valueOf(model.getValueAt(i, 0)))) {
                    // 이미 해당 메뉴가 주문 목록에 존재하면 갯수를 증가시킴
                    int count = Integer.parseInt(String.valueOf(model.getValueAt(i, 2)));
                    model.setValueAt(count + 1, i, 2);
                    found = true;
                    ViewTotal.setText(String.valueOf(Total));
                    break;
                }
            }

            // 행이 없으면 새로운 행 추가
            if (!found) {
                model.addRow(new Object[]{
                    String.valueOf(MenuTable.getValueAt(row, 0)),
                    String.valueOf(MenuTable.getValueAt(row, 1)),
                    1 // 처음 추가되는 경우 갯수를 1로 설정
                });

                ViewTotal.setText(String.valueOf(Total));
            }
        } else {
            JOptionPane.showMessageDialog(null, "호실을 선택해주세요", "오류", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_OrderActionPerformed

    private void MenuTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuTableMouseClicked
        OrderTable.clearSelection(); // 행 중복 선택 안됨
    }//GEN-LAST:event_MenuTableMouseClicked

    private void OrderTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OrderTableMouseClicked
        MenuTable.clearSelection(); // 행 중복 선택 안됨
    }//GEN-LAST:event_OrderTableMouseClicked

    private void PaymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PaymentActionPerformed
            
        if (Total != 0 && pay != null) {
            String Menu = null;

            for (int i = 0; i < OrderTable.getRowCount(); i++) {
                if (i == 0) {
                    Menu = String.valueOf(OrderTable.getValueAt(i, 0))+" "+String.valueOf(OrderTable.getValueAt(i, 2))+"개";
                } else {
                    Menu = Menu.concat(", " + String.valueOf(OrderTable.getValueAt(i, 0))+" "+String.valueOf(OrderTable.getValueAt(i, 2))+"개");
                }
            }

            ws.setService(service);
            ws.setMenu(Menu);            
            ws.setTotal(Total);
            ws.WriteOrderList();
            initServiceList();
            JOptionPane.showMessageDialog(null, "결제 완료", "알림", JOptionPane.INFORMATION_MESSAGE);
        } else if (pay == null) {
            JOptionPane.showMessageDialog(null, "결제 방법을 선택해주세요.", "오류", JOptionPane.ERROR_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "결제할 금액이 없습니다.", "오류", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_PaymentActionPerformed

    private void ResetButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetButtActionPerformed
        initServiceList();
    }//GEN-LAST:event_ResetButtActionPerformed

    private void SelectPayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectPayActionPerformed
        pay = String.valueOf(SelectPay.getSelectedItem());
    }//GEN-LAST:event_SelectPayActionPerformed

    private void ReservationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReservationActionPerformed
        if (Total != 0) {
        DefaultTableModel orderTableModel = (DefaultTableModel) OrderTable.getModel();
        ServiceRvFrame serviceRvFrame = new ServiceRvFrame(orderTableModel,Total);
        serviceRvFrame.WS.setTotal(Total);
        serviceRvFrame.WS.setService(service);
        serviceRvFrame.WS.setRoom(roomNum);
        serviceRvFrame.setVisible(true);
        initServiceList();      
        }
        else {
            JOptionPane.showMessageDialog(null, "예약할 메뉴가 없습니다.", "오류", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_ReservationActionPerformed

    private void SelectRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectRoomActionPerformed
        roomNum = String.valueOf(SelectRoom.getSelectedItem());
    }//GEN-LAST:event_SelectRoomActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RoomServiceFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RoomServiceFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RoomServiceFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RoomServiceFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RoomServiceFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Back;
    private javax.swing.JTable MenuTable;
    private javax.swing.JButton NoOrder;
    private javax.swing.JButton Order;
    private javax.swing.JTable OrderTable;
    private javax.swing.JButton Payment;
    private javax.swing.JButton Reservation;
    private javax.swing.JButton ResetButt;
    private javax.swing.JComboBox<String> SelectPay;
    private javax.swing.JComboBox<String> SelectRoom;
    private javax.swing.JTextField ViewTotal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JList<String> jList3;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    // End of variables declaration//GEN-END:variables

}
